{"version":3,"sources":["logo.svg","TrieDictionary.js","solver.js","App.js","reportWebVitals.js","index.js"],"names":["TrieNode","this","children","isEnd","i","push","TrieDictionary","root","word","console","log","index","currNode","length","charAt","charCodeAt","words","insertHelper","printHelper","String","fromCharCode","node","fetch","then","response","text","fillHelper","split","insert","window","onload","button","document","getElementById","Solver","validWords","Set","dictionary","fill","boardSize","board","value","output","values","disabled","innerHTML","traversed","j","searchHelper","string","row","col","exists","add","traversedCopy","includes","slice","onclick","solver","setTimeout","search","printValidWords","App","className","type","id","maxLength","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+PAAe,I,sCCAFA,EACT,aAAe,oBACXC,KAAKC,SAAW,GAChBD,KAAKE,OAAQ,EACb,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACpBH,KAAKC,SAASG,KAAK,OAKlBC,EAAb,WACI,aAAe,oBACXL,KAAKM,KAAO,IAAIP,EAFxB,yDAKiBQ,GACTC,QAAQC,IAAI,SAKZ,IAJA,IAEIC,EAFAC,EAAWX,KAAKM,KAGhBM,EAASL,EAAKK,OACTT,EAAI,EAAGA,EAAIS,EAAQT,IAExBO,EADWH,EAAKM,OAAOV,GACNW,WAAW,GAAK,IAAIA,WAAW,GAChB,MAA5BH,EAASV,SAASS,KAClBC,EAASV,SAASS,GAAS,IAAIX,GAEnCY,EAAWA,EAASV,SAASS,GACzBP,GAAKS,EAAS,IACdD,EAAST,OAAQ,KAnBjC,6BAwBWa,GAEH,IADA,IAAIH,EAASG,EAAMH,OACVT,EAAI,EAAGA,EAAIS,EAAQT,IACxBH,KAAKgB,aAAaD,EAAMZ,MA3BpC,6BA+BWI,GAIH,IAHA,IAEIG,EAFAC,EAAWX,KAAKM,KAGXH,EAAI,EAAGA,EAAII,EAAKK,OAAQT,IAAK,CAGlC,GADAO,EADWH,EAAKM,OAAOV,GACNW,WAAW,GAAK,IAAIA,WAAW,GAChB,MAA5BH,EAASV,SAASS,GAClB,OAAO,EAGX,GADAC,EAAWA,EAASV,SAASS,GACzBP,GAAKI,EAAKK,OAAS,EACnB,OAAsB,GAAlBD,EAAST,MACF,EAEA,EAInB,OAAO,IAlDf,kCAsDQ,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACS,MAAzBH,KAAKM,KAAKL,SAASE,IACnBH,KAAKiB,YAAYjB,KAAKM,KAAKL,SAASE,GAAIe,OAAOC,aAAa,IAAIL,WAAW,GAAKX,MAxDhG,kCA6DgBiB,EAAMb,GACI,GAAda,EAAKlB,OACLM,QAAQC,IAAIF,GAEhB,IAAK,IAAIJ,EAAI,EAAGA,EAAI,GAAIA,IACI,MAApBiB,EAAKnB,SAASE,IACdH,KAAKiB,YAAYG,EAAKnB,SAASE,GAAII,EAAOW,OAAOC,aAAa,IAAIL,WAAW,GAAKX,MAnElG,6BAwEY,IAAD,OACHkB,MAAM,gBAAgBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAE,GAAI,OAAI,EAAKC,WAAWD,QAzE7F,iCA4EeA,GACP,IAAIT,EAAQ,GACZP,QAAQC,IAAIe,GACZhB,QAAQC,IAAIM,GACZA,EAAQS,EAAKE,MAAM,MACnBlB,QAAQC,IAAIM,GACZf,KAAK2B,OAAOZ,OAlFpB,KCTAa,OAAOC,OAAS,WACZ,IAAIC,EAASC,SAASC,eAAe,eAE/BC,EAHkB,WAIpB,aAAe,oBACXzB,QAAQC,IAAI,GACZT,KAAKkC,WAAa,IAAIC,IACtBnC,KAAKoC,WAAa,IAAI/B,EACtBL,KAAKoC,WAAWC,OAChBrC,KAAKsC,UAAY,EACjBtC,KAAKuC,MAAQ,CAAC,GAAI,GAAI,GAAI,IAC1B,IAAK,IAAIpC,EAAI,EAAGA,EAAIH,KAAKsC,UAAWnC,IAChCH,KAAKuC,MAAMpC,GAAGC,KAAK,KAGvBJ,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDxC,KAAKuC,MAAM,GAAG,GAAKR,SAASC,eAAe,MAAMQ,MACjDhC,QAAQC,IAAI,IA/BI,8DAmChBD,QAAQC,IAAIT,KAAKkC,YACjB,IAFc,EAEVO,EAAS,aAFC,cAGGzC,KAAKkC,WAAWQ,UAHnB,IAGd,2BAA2C,CACvCD,GAAU,IAD6B,SAH7B,8BAMdV,SAASC,eAAe,eAAeW,UAAW,EAClDnC,QAAQC,IAAIgC,GACZV,SAASC,eAAe,WAAWY,UAAYH,IA1C/B,+BA8ChBjC,QAAQC,IAAI,GAEZ,IADA,IAAIoC,EAAY,GACP1C,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAK,IAAI2C,EAAI,EAAGA,EAAI,EAAGA,IACnBD,EAAUzC,KAAS,EAAJD,EAAQ2C,GACvB9C,KAAK+C,aAAa/C,KAAKuC,MAAMpC,GAAG2C,GAAI3C,EAAG2C,EAAGD,GAE9CA,EAAY,MArDA,mCAyDPG,EAAQC,EAAKC,EAAKL,GAE3B,GADArC,QAAQC,IAAI,QAC0B,GAAlCT,KAAKoC,WAAWe,OAAOH,GAA3B,CAE6C,GAAlChD,KAAKoC,WAAWe,OAAOH,IAC9BhD,KAAKkC,WAAWkB,IAAIJ,GAExB,IAAIK,EAAgB,GAGhBJ,GAAOjD,KAAKsC,UAAY,GAAMO,EAAUS,UAAUL,EAAM,GAAKjD,KAAKsC,UAAYY,KAC9EG,EAAgBR,EAAUU,QAC1BV,EAAUzC,MAAM6C,EAAM,GAAKjD,KAAKsC,UAAYY,GAC5ClD,KAAK+C,aAAaC,EAAShD,KAAKuC,MAAMU,EAAM,GAAGC,GAAMD,EAAM,EAAGC,EAAKL,GACnEA,EAAYQ,EAAcE,SAI1BN,GAAOjD,KAAKsC,UAAY,GAAKY,GAAOlD,KAAKsC,UAAY,GAAMO,EAAUS,UAAUL,EAAM,GAAKjD,KAAKsC,UAAYY,EAAM,KACjHG,EAAgBR,EAAUU,QAC1BV,EAAUzC,MAAM6C,EAAM,GAAKjD,KAAKsC,UAAYY,EAAM,GAClDlD,KAAK+C,aAAaC,EAAShD,KAAKuC,MAAMU,EAAM,GAAGC,EAAM,GAAID,EAAM,EAAGC,EAAM,EAAGL,GAC3EA,EAAYQ,EAAcE,SAI1BL,GAAOlD,KAAKsC,UAAY,GAAMO,EAAUS,SAAUL,EAAOjD,KAAKsC,UAAYY,EAAM,KAChFG,EAAgBR,EAAUU,QAC1BV,EAAUzC,KAAM6C,EAAOjD,KAAKsC,UAAYY,EAAM,GAC9ClD,KAAK+C,aAAaC,EAAShD,KAAKuC,MAAMU,GAAKC,EAAM,GAAID,EAAKC,EAAM,EAAGL,GACnEA,EAAYQ,EAAcE,SAI1BL,GAAOlD,KAAKsC,UAAY,GAAY,GAAPW,GAAaJ,EAAUS,UAAUL,EAAM,GAAKjD,KAAKsC,UAAYY,EAAM,KAChGG,EAAgBR,EAAUU,QAC1BV,EAAUzC,MAAM6C,EAAM,GAAKjD,KAAKsC,UAAYY,EAAM,GAClDlD,KAAK+C,aAAaC,EAAShD,KAAKuC,MAAMU,EAAM,GAAGC,EAAM,GAAID,EAAM,EAAGC,EAAM,EAAGL,GAC3EA,EAAYQ,EAAcE,SAInB,GAAPN,GAAaJ,EAAUS,UAAUL,EAAM,GAAKjD,KAAKsC,UAAYY,KAC7DG,EAAgBR,EAAUU,QAC1BV,EAAUzC,MAAM6C,EAAM,GAAKjD,KAAKsC,UAAYY,GAC5ClD,KAAK+C,aAAaC,EAAShD,KAAKuC,MAAMU,EAAM,GAAGC,GAAMD,EAAM,EAAGC,EAAKL,GACnEA,EAAYQ,EAAcE,SAInB,GAAPN,GAAmB,GAAPC,GAAaL,EAAUS,UAAUL,EAAM,GAAKjD,KAAKsC,UAAYY,EAAM,KAC/EG,EAAgBR,EAAUU,QAC1BV,EAAUzC,MAAM6C,EAAM,GAAKjD,KAAKsC,UAAYY,EAAM,GAClDlD,KAAK+C,aAAaC,EAAShD,KAAKuC,MAAMU,EAAM,GAAGC,EAAM,GAAID,EAAM,EAAGC,EAAM,EAAGL,GAC3EA,EAAYQ,EAAcE,SAInB,GAAPL,GAAaL,EAAUS,SAAUL,EAAOjD,KAAKsC,UAAYY,EAAM,KAC/DG,EAAgBR,EAAUU,QAC1BV,EAAUzC,KAAM6C,EAAOjD,KAAKsC,UAAYY,EAAM,GAC9ClD,KAAK+C,aAAaC,EAAShD,KAAKuC,MAAMU,GAAKC,EAAM,GAAID,EAAKC,EAAM,EAAGL,GACnEA,EAAYQ,EAAcE,SAI1BN,GAAOjD,KAAKsC,UAAY,GAAY,GAAPY,GAAaL,EAAUS,UAAUL,EAAM,GAAKjD,KAAKsC,UAAYY,EAAM,KAChGG,EAAgBR,EAAUU,QAC1BV,EAAUzC,MAAM6C,EAAM,GAAKjD,KAAKsC,UAAYY,EAAM,GAClDlD,KAAK+C,aAAaC,EAAShD,KAAKuC,MAAMU,EAAM,GAAGC,EAAM,GAAID,EAAM,EAAGC,EAAM,EAAGL,GAC3EA,EAAYQ,EAAcE,cA/Hd,KAqIxBzB,EAAO0B,QAAU,WACbzB,SAASC,eAAe,eAAeW,UAAW,EAIlD,IAAIc,EAAS,IAAIxB,EACjByB,YAAW,WACPD,EAAOE,WACR,MACHD,YAAW,WACPD,EAAOG,oBACR,QC1DIC,MAjFf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,oBAAIA,UAAU,OAAd,mCACA,mBAAGA,UAAU,OAAb,2DAKN,sBAAKA,UAAU,YAAf,UAEE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,uCACA,uBAAOC,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,SAI1C,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,uCACA,uBAAOC,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,SAI1C,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,uCACA,uBAAOC,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,SAI1C,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,uCACA,uBAAOC,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,IACtC,uCACA,uBAAOF,KAAK,OAAOC,GAAG,KAAKC,UAAW,SAI1C,qBAAKH,UAAU,MAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,wBAAQE,GAAG,cAAcD,KAAK,SAA9B,wBAIJ,qBAAKD,UAAU,MAAf,SACE,wBAAQE,GAAG,UAAX,8BAGJ,wBAAQD,KAAK,SAASG,IAAI,YAA1B,mBCtESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAASC,eAAe,SAM1BmC,M","file":"static/js/main.701add51.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export class TrieNode {\r\n    constructor() {\r\n        this.children = [];\r\n        this.isEnd = false;\r\n        for (let i = 0; i < 26; i++) {\r\n            this.children.push(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport class TrieDictionary {\r\n    constructor() {\r\n        this.root = new TrieNode();\r\n    }\r\n\r\n    insertHelper(word) {\r\n        console.log(\"here1\");\r\n        let currNode = this.root;\r\n        let currChar;\r\n        let index;\r\n        let length = word.length;\r\n        for (let i = 0; i < length; i++) {\r\n            currChar = word.charAt(i);\r\n            index = currChar.charCodeAt(0) - 'a'.charCodeAt(0);\r\n            if (currNode.children[index] == null) {\r\n                currNode.children[index] = new TrieNode();\r\n            }\r\n            currNode = currNode.children[index];\r\n            if (i == length - 1) {\r\n                currNode.isEnd = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    insert(words) {\r\n        let length = words.length;\r\n        for (let i = 0; i < length; i++) {\r\n            this.insertHelper(words[i])\r\n        }\r\n    }\r\n\r\n    exists(word) {\r\n        let currNode = this.root;\r\n        let currChar;\r\n        let index;\r\n        for (let i = 0; i < word.length; i++) {\r\n            currChar = word.charAt(i);\r\n            index = currChar.charCodeAt(0) - 'a'.charCodeAt(0);\r\n            if (currNode.children[index] == null) {\r\n                return 0;\r\n            }\r\n            currNode = currNode.children[index];\r\n            if (i == word.length - 1) {\r\n                if (currNode.isEnd == true) {\r\n                    return 2;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    printTrie() {\r\n        for (let i = 0; i < 26; i++) {\r\n            if (this.root.children[i] != null) {\r\n                this.printHelper(this.root.children[i], String.fromCharCode('a'.charCodeAt(0) + i));\r\n            }\r\n        }\r\n    }\r\n\r\n    printHelper(node, word) {\r\n        if (node.isEnd == true) {\r\n            console.log(word);\r\n        }\r\n        for (let i = 0; i < 26; i++) {\r\n            if (node.children[i] != null) {\r\n                this.printHelper(node.children[i], word + String.fromCharCode('a'.charCodeAt(0) + i));\r\n            }\r\n        }\r\n    }\r\n\r\n    fill() {\r\n        fetch('AllWords.txt').then(response => response.text()).then(text => this.fillHelper(text));\r\n    }\r\n\r\n    fillHelper(text) {\r\n        let words = [];\r\n        console.log(text);\r\n        console.log(words);\r\n        words = text.split(\"\\n\");\r\n        console.log(words);\r\n        this.insert(words);\r\n    }\r\n}","import { TrieDictionary } from './TrieDictionary.js';\r\nwindow.onload = function () {\r\n    let button = document.getElementById(\"solveButton\");\r\n\r\n    class Solver {\r\n        constructor() {\r\n            console.log(1);\r\n            this.validWords = new Set();\r\n            this.dictionary = new TrieDictionary();\r\n            this.dictionary.fill();\r\n            this.boardSize = 4;\r\n            this.board = [[], [], [], []];\r\n            for (let i = 0; i < this.boardSize; i++) {\r\n                this.board[i].push(\" \");\r\n            }\r\n            //add all elements to board\r\n            this.board[0][0] = document.getElementById(\"A1\").value;\r\n            this.board[0][1] = document.getElementById(\"B1\").value;\r\n            this.board[0][2] = document.getElementById(\"C1\").value;\r\n            this.board[0][3] = document.getElementById(\"D1\").value;\r\n            this.board[1][0] = document.getElementById(\"A2\").value;\r\n            this.board[1][1] = document.getElementById(\"B2\").value;\r\n            this.board[1][2] = document.getElementById(\"C2\").value;\r\n            this.board[1][3] = document.getElementById(\"D2\").value;\r\n            this.board[2][0] = document.getElementById(\"A3\").value;\r\n            this.board[2][1] = document.getElementById(\"B3\").value;\r\n            this.board[2][2] = document.getElementById(\"C3\").value;\r\n            this.board[2][3] = document.getElementById(\"D3\").value;\r\n            this.board[3][0] = document.getElementById(\"A4\").value;\r\n            this.board[3][1] = document.getElementById(\"B4\").value;\r\n            this.board[3][2] = document.getElementById(\"C4\").value;\r\n            this.board[3][3] = document.getElementById(\"D4\").value;\r\n            console.log(11);\r\n        }\r\n\r\n        printValidWords() {\r\n            console.log(this.validWords);\r\n            let output = \"Solutions:\"\r\n            for (let word of this.validWords.values()) {\r\n                output += \" \" + word;\r\n            }\r\n            document.getElementById(\"solveButton\").disabled = false;\r\n            console.log(output);\r\n            document.getElementById(\"outputs\").innerHTML = output;\r\n        }\r\n\r\n        search() {\r\n            console.log(2);\r\n            let traversed = [];\r\n            for (let i = 0; i < 4; i++) {\r\n                for (let j = 0; j < 4; j++) {\r\n                    traversed.push(i * 4 + j);\r\n                    this.searchHelper(this.board[i][j], i, j, traversed);\r\n                }\r\n                traversed = [];\r\n            }\r\n        }\r\n\r\n        searchHelper(string, row, col, traversed) {\r\n            console.log(\"here\");\r\n            if (this.dictionary.exists(string) == 0) {\r\n                return;\r\n            } else if (this.dictionary.exists(string) == 2) {\r\n                this.validWords.add(string);\r\n            }\r\n            let traversedCopy = [];\r\n\r\n            //check down\r\n            if (row != this.boardSize - 1 && !traversed.includes((row + 1) * this.boardSize + col)) {\r\n                traversedCopy = traversed.slice();\r\n                traversed.push((row + 1) * this.boardSize + col);\r\n                this.searchHelper(string + this.board[row + 1][col], row + 1, col, traversed);\r\n                traversed = traversedCopy.slice();\r\n            }\r\n\r\n            //check down-right\r\n            if (row != this.boardSize - 1 && col != this.boardSize - 1 && !traversed.includes((row + 1) * this.boardSize + col + 1)) {\r\n                traversedCopy = traversed.slice();\r\n                traversed.push((row + 1) * this.boardSize + col + 1);\r\n                this.searchHelper(string + this.board[row + 1][col + 1], row + 1, col + 1, traversed);\r\n                traversed = traversedCopy.slice();\r\n            }\r\n\r\n            //check right\r\n            if (col != this.boardSize - 1 && !traversed.includes((row) * this.boardSize + col + 1)) {\r\n                traversedCopy = traversed.slice();\r\n                traversed.push((row) * this.boardSize + col + 1);\r\n                this.searchHelper(string + this.board[row][col + 1], row, col + 1, traversed);\r\n                traversed = traversedCopy.slice();\r\n            }\r\n\r\n            //check up-right\r\n            if (col != this.boardSize - 1 && row != 0 && !traversed.includes((row - 1) * this.boardSize + col + 1)) {\r\n                traversedCopy = traversed.slice();\r\n                traversed.push((row - 1) * this.boardSize + col + 1);\r\n                this.searchHelper(string + this.board[row - 1][col + 1], row - 1, col + 1, traversed);\r\n                traversed = traversedCopy.slice();\r\n            }\r\n\r\n            //check up\r\n            if (row != 0 && !traversed.includes((row - 1) * this.boardSize + col)) {\r\n                traversedCopy = traversed.slice();\r\n                traversed.push((row - 1) * this.boardSize + col);\r\n                this.searchHelper(string + this.board[row - 1][col], row - 1, col, traversed);\r\n                traversed = traversedCopy.slice();\r\n            }\r\n\r\n            //check up-left\r\n            if (row != 0 && col != 0 && !traversed.includes((row - 1) * this.boardSize + col - 1)) {\r\n                traversedCopy = traversed.slice();\r\n                traversed.push((row - 1) * this.boardSize + col - 1);\r\n                this.searchHelper(string + this.board[row - 1][col - 1], row - 1, col - 1, traversed);\r\n                traversed = traversedCopy.slice();\r\n            }\r\n\r\n            //check left\r\n            if (col != 0 && !traversed.includes((row) * this.boardSize + col - 1)) {\r\n                traversedCopy = traversed.slice();\r\n                traversed.push((row) * this.boardSize + col - 1);\r\n                this.searchHelper(string + this.board[row][col - 1], row, col - 1, traversed);\r\n                traversed = traversedCopy.slice();\r\n            }\r\n\r\n            //check down-left\r\n            if (row != this.boardSize - 1 && col != 0 && !traversed.includes((row + 1) * this.boardSize + col - 1)) {\r\n                traversedCopy = traversed.slice();\r\n                traversed.push((row + 1) * this.boardSize + col - 1);\r\n                this.searchHelper(string + this.board[row + 1][col - 1], row + 1, col - 1, traversed);\r\n                traversed = traversedCopy.slice();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    button.onclick = function solve() {\r\n        document.getElementById(\"solveButton\").disabled = true;\r\n        //let dictionary = new TrieDictionary();\r\n        //dictionary.fill();\r\n\r\n        let solver = new Solver();\r\n        setTimeout(function () {\r\n            solver.search();\r\n        }, 12000);\r\n        setTimeout(function () {\r\n            solver.printValidWords();\r\n        }, 17000);\r\n    }\r\n\r\n    function test(solver) {\r\n        console.log(solver.dictionary.exists(\"af\"));\r\n    }\r\n};","import logo from './logo.svg';\r\nimport './App.css';\r\nimport './bootstrap.min.css';\r\nimport './custom.css';\r\nimport './solver.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 text-center\">\r\n            <h1 className=\"mt-5\">Word Hunt Game Solver</h1>\r\n            <p className=\"lead\">Lists all possible words on the board!</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 text-center\">\r\n            <label>A1</label>\r\n            <input type=\"text\" id=\"A1\" maxLength={1} />\r\n            <label>B1</label>\r\n            <input type=\"text\" id=\"B1\" maxLength={1} />\r\n            <label>C1</label>\r\n            <input type=\"text\" id=\"C1\" maxLength={1} />\r\n            <label>D1</label>\r\n            <input type=\"text\" id=\"D1\" maxLength={1} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 text-center\">\r\n            <label>A2</label>\r\n            <input type=\"text\" id=\"A2\" maxLength={1}/>\r\n            <label>B2</label>\r\n            <input type=\"text\" id=\"B2\" maxLength={1}/>\r\n            <label>C2</label>\r\n            <input type=\"text\" id=\"C2\" maxLength={1}/>\r\n            <label>D2</label>\r\n            <input type=\"text\" id=\"D2\" maxLength={1}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 text-center\">\r\n            <label>A3</label>\r\n            <input type=\"text\" id=\"A3\" maxLength={1}/>\r\n            <label>B3</label>\r\n            <input type=\"text\" id=\"B3\" maxLength={1}/>\r\n            <label>C3</label>\r\n            <input type=\"text\" id=\"C3\" maxLength={1}/>\r\n            <label>D3</label>\r\n            <input type=\"text\" id=\"D3\" maxLength={1}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 text-center\">\r\n            <label>A4</label>\r\n            <input type=\"text\" id=\"A4\" maxLength={1}/>\r\n            <label>B4</label>\r\n            <input type=\"text\" id=\"B4\" maxLength={1}/>\r\n            <label>C4</label>\r\n            <input type=\"text\" id=\"C4\" maxLength={1}/>\r\n            <label>D4</label>\r\n            <input type=\"text\" id=\"D4\" maxLength={1}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 text-center\">\r\n            <button id=\"solveButton\" type=\"button\">Solve!</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <output id=\"outputs\">Solutions: </output>\r\n        </div>\r\n      </div>\r\n      <script type=\"module\" src=\"solver.js\"> </script>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}